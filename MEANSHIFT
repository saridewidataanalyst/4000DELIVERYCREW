#clustering dengan meanshift bukan algorithm kmeans
[]
import modules
import numpy as np
import pandas as pd
from sklearn.cluster import MeanShift
from sklearn.datasets.samples_generator import make_blobs
import matplotlib.pyplot as plt
from matplotlib import style

style.use("ggplot")

[]
#generate sample data terdiri dari 500 poin, membentuk 3 cluster
centers = [[1,1],[5,5],[3,10]]
X, _ = make_blobs(n_samples = 500, centers = centers, cluster_std = 1)
make_blobs?

[]
#menggambar data point
plt.scatter(X[:,0],X[:,1])
plt.show()

[]
ms = MeanShift()
ms.fit(X)

cluster_centers = ms.cluster_centers_
cluster_centers

[]
labels = ms.labels_
labels

[]
print(cluster_centers)
n_clusters_ = len(np.unique(labels))
print("Number of estimated cluster:", n_clusters_)

[]
colors = 10*['r.','g.','b.','c.','k.','y.','m.']
for i in range(len(X)):
plt.plot(X[i][0], X[i][1], colors[labels[i]], markersize= 10)
    
plt.scatter(cluster_centers[:,0],cluster_centers[:,1],
            marker="x", color='k', s=150, linewidths= 5, zorder=10) 
plt.show()


[]
#bagaimana kalau kita aplikasikan ke data driver sebelumnya
#import data
df = pd.read_csv('delivery.csv', delimiter=";")

#prepocesssing hanya fitur distance dan speeding
df_2_vars = df.drop(['DRIVER_ID'], axis=1)
data = df_2_vars.values

ms = MeanShift()
ms.fit(data)

cluster_centers = ms.cluster_centers_
cluster_centers

[]
labels = ms.labels_
labels

[]
print(cluster_centers)
n_clusters_ = len(np.unique(labels))
print("Number of estimated clusters:", n_clusters_)

[]
colors = 10*['r.','g.','b.','c.','k.','y.','m.']
for i in range(len(data)):
plt.plot(data[i][0], data[i][1], colors[labels[i]], markersize= 10)
    
plt.scatter(cluster_centers[:,0],cluster_centers[:,1],
marker="x", color='k', s=150, linewidths= 5, zorder=10)
#"x"(marker)=posisi cluster centernya
plt.show()

[]
#kesimpulan meanshift adalah salah satu bentuk clustering, berguna untuk eksplorasi data dan melihat gambaran awal untuk eksporasi data dan melihat 
#gambaran awal mengenai tren yang ada pada data
